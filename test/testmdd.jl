## --- Import an MDD dataset

    datapath = joinpath("..", "examples", "ol13.csv")
    mdds = importdataset(datapath, importas=:Tuple)

    agesteps = 995:-10.:5
    tsteps = reverse(agesteps)
    Tsteps = range(250, 0., length(tsteps))

## --- Test Multiple Domain Diffusion with with PlanarAr
    mdd = MultipleDomain(Float64, PlanarAr;
        age = mdds.age_Ma,
        age_sigma = mdds.age_sigma_Ma,
        fraction_released = mdds.fraction_degassed,
        tsteps_experimental = issorted(mdds.time_s, lt=<=) ? mdds.time_s : cumsum(mdds.time_s),
        Tsteps_experimental = mdds.temperature_C,
        fit = mdds.fit,
        volume_fraction = mdds.volume_fraction[.!isnan.(mdds.volume_fraction)],
        lnD0_a_2 = mdds.lnD0_a_2[.!isnan.(mdds.lnD0_a_2)],
        Ea = mdds.Ea_kJ_mol[.!isnan.(mdds.Ea_kJ_mol)],
        agesteps,
    )
    @test mdd isa MultipleDomain{Float64, PlanarAr{Float64}}

    age, fraction = modelage(mdd, Tsteps)
    @test round.(age, sigdigits=5) == [510.83, 511.8, 513.93, 517.33, 521.11, 525.62, 531.16, 536.52, 542.51, 548.57, 553.88, 559.77, 565.37, 571.05, 577.48, 583.71, 591.55, 600.18, 607.38, 614.92, 621.85, 629.16, 637.73, 645.49, 654.02, 662.75, 670.2, 679.01, 689.42, 700.5, 711.32, 721.37, 731.44, 743.4, 757.92, 772.54, 783.25, 790.3, 797.94, 808.53, 821.75, 835.78, 848.56, 859.09, 867.76, 875.46, 882.78, 889.64, 895.97, 901.63, 906.64, 910.93, 914.64, 917.76, 920.45, 922.69, 924.67, 926.33, 927.85, 929.14, 930.37, 931.43, 932.47, 933.38, 934.31, 935.14, 935.99, 936.75, 937.56, 938.27, 939.05, 939.73, 940.47, 941.13, 941.85, 942.49, 943.19, 943.82, 944.5, 945.1, 945.77, 946.36, 947.03, 947.73, 948.62, 949.64, 950.88, 952.3, 953.98, 955.88, 958.06, 960.58, 963.4, 966.36, 969.5, 972.75, 975.91, 978.83, 981.57, 984.08]
    @test round.(fraction, sigdigits=5) == [1.0504e-5, 3.9141e-5, 9.7686e-5, 0.00018135, 0.00026017, 0.00039391, 0.00054264, 0.00070869, 0.0009729, 0.0012123, 0.0015281, 0.0019339, 0.0023034, 0.0028638, 0.0034541, 0.0041365, 0.00535, 0.006395, 0.0076538, 0.0091381, 0.010463, 0.012705, 0.015073, 0.017637, 0.021635, 0.025065, 0.029516, 0.036139, 0.045441, 0.05794, 0.07418, 0.094629, 0.11928, 0.1473, 0.17764, 0.21032, 0.24655, 0.28682, 0.32911, 0.36873, 0.40217, 0.43096, 0.45678, 0.47929, 0.49727, 0.51217, 0.52482, 0.53579, 0.54547, 0.55417, 0.56209, 0.56941, 0.57623, 0.58265, 0.58873, 0.59453, 0.60008, 0.60542, 0.61057, 0.61555, 0.62037, 0.62505, 0.6296, 0.63402, 0.63832, 0.64252, 0.64661, 0.65061, 0.6545, 0.65831, 0.66204, 0.66568, 0.66924, 0.67272, 0.67613, 0.67948, 0.68275, 0.68596, 0.6891, 0.69219, 0.69521, 0.69818, 0.7013, 0.70503, 0.70948, 0.71472, 0.72083, 0.7279, 0.73598, 0.74513, 0.75566, 0.76831, 0.78209, 0.79776, 0.81626, 0.8388, 0.86566, 0.90138, 0.94758, 1.0]

## --- Test Multiple Domain Diffusion with SphericalAr
    mdd = MultipleDomain(Float64, SphericalAr;
        age = mdds.age_Ma,
        age_sigma = mdds.age_sigma_Ma,
        fraction_released = mdds.fraction_degassed,
        tsteps_experimental = issorted(mdds.time_s, lt=<=) ? mdds.time_s : cumsum(mdds.time_s),
        Tsteps_experimental = mdds.temperature_C,
        fit = mdds.fit,
        volume_fraction = mdds.volume_fraction[.!isnan.(mdds.volume_fraction)],
        lnD0_a_2 = mdds.lnD0_a_2[.!isnan.(mdds.lnD0_a_2)],
        Ea = mdds.Ea_kJ_mol[.!isnan.(mdds.Ea_kJ_mol)],
        agesteps,
    )
    @test mdd isa MultipleDomain{Float64, SphericalAr{Float64}}

    age, fraction = modelage(mdd, Tsteps)
    @test round.(age, sigdigits=5) == [508.24, 509.18, 511.24, 514.53, 518.19, 522.54, 527.88, 533.04, 538.78, 544.58, 549.63, 555.2, 560.48, 565.81, 571.81, 577.6, 584.84, 592.77, 599.34, 606.19, 612.45, 618.99, 626.65, 633.55, 641.09, 648.83, 655.4, 663.23, 672.68, 683.34, 695.15, 708.47, 722.6, 735.03, 745.45, 756.64, 770.92, 788.86, 806.83, 821.58, 835.6, 850.29, 863.85, 874.45, 881.9, 887.25, 891.66, 895.49, 898.97, 902.15, 905.14, 907.92, 910.56, 913.05, 915.4, 917.64, 919.74, 921.75, 923.63, 925.43, 927.1, 928.71, 930.19, 931.63, 932.94, 934.23, 935.39, 936.55, 937.57, 938.62, 939.53, 940.48, 941.29, 942.15, 942.88, 943.67, 944.32, 945.05, 945.64, 946.31, 946.85, 947.47, 947.99, 948.66, 949.35, 950.22, 951.16, 952.26, 953.45, 954.81, 956.29, 958.01, 959.92, 962.03, 964.42, 967.22, 970.44, 974.16, 978.33, 982.34]
    @test round.(fraction, sigdigits=5) == [2.2455e-5, 8.3663e-5, 0.00020875, 0.00038739, 0.00055559, 0.00084071, 0.0011574, 0.0015105, 0.0020716, 0.002579, 0.0032473, 0.0041041, 0.0048823, 0.0060597, 0.0072956, 0.0087194, 0.011238, 0.013392, 0.015971, 0.018988, 0.021661, 0.026138, 0.030805, 0.035787, 0.043415, 0.049817, 0.057936, 0.069627, 0.085264, 0.10484, 0.1279, 0.15362, 0.18141, 0.21137, 0.24326, 0.27547, 0.3059, 0.3336, 0.35951, 0.38409, 0.40636, 0.42694, 0.44663, 0.46494, 0.48057, 0.49438, 0.50681, 0.51813, 0.52853, 0.53816, 0.54711, 0.55548, 0.56334, 0.57076, 0.57777, 0.58443, 0.59076, 0.59681, 0.6026, 0.60816, 0.6135, 0.61864, 0.6236, 0.6284, 0.63304, 0.63755, 0.64192, 0.64617, 0.65031, 0.65434, 0.65827, 0.6621, 0.66585, 0.66952, 0.67311, 0.67662, 0.68006, 0.68343, 0.68674, 0.68999, 0.69318, 0.69631, 0.6996, 0.70355, 0.70826, 0.71383, 0.72034, 0.7279, 0.73659, 0.74647, 0.75791, 0.77171, 0.78678, 0.8039, 0.82398, 0.84803, 0.87584, 0.91115, 0.95412, 1.0]

## --- End of File